{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/store/actions.js","webpack:///./js/store/mutations.js","webpack:///./js/lib/pubsub.js","webpack:///./js/store/store.js","webpack:///./js/store/index.js","webpack:///./js/store/state.js","webpack:///./js/lib/component.js","webpack:///./js/main.js","webpack:///./js/components/count.js","webpack:///./js/components/list.js","webpack:///./js/components/status.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","addItem","state","payload","items","push","clearItem","splice","index","PubSub","this","events","event","callback","self","data","map","params","actions","mutations","status","Proxy","set","console","log","publish","warn","actionKey","error","groupCollapsed","groupEnd","mutationKey","newState","assign","context","commit","adjL","nodes","triggerOne","id","type","text","outdegree","indegree","coonectedNodes","actionOne","ifThenOne","filterOne","actionLeft","actionRight","props","render","store","subscribe","element","formElement","document","querySelector","inputElement","btn","addEventListener","e","evt","preventDefault","trim","length","dispatch","focus","countInstance","super","suffix","emoji","innerHTML","listInstance","item","join","querySelectorAll","forEach","button","statusInstance"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default {\n    addItem(context, payload) {\n        context.commit('addItem', payload);\n    },\n    clearItem(context, payload) {\n        context.commit('clearItem', payload);\n    }\n};\n","export default {\n    addItem(state, payload) {\n        state.items.push(payload);\n        \n        return state;\n    },\n    clearItem(state, payload) {\n        state.items.splice(payload.index, 1);\n        \n        return state;\n    }\n};\n","export default class PubSub {\n    constructor() {\n        this.events = {};\n    }\n\n    /**\n     * Either create a new event instance for passed `event` name\n     * or push a new callback into the existing collection\n     *\n     * @param {string} event\n     * @param {function} callback\n     * @returns {number} A count of callbacks for this event\n     * @memberof PubSub\n     */\n    subscribe(event, callback) {\n        \n        let self = this;\n        \n        // If there's not already an event with this name set in our collection\n        // go ahead and create a new one and set it with an empty array, so we don't\n        // have to type check it later down-the-line\n        if(!self.events.hasOwnProperty(event)) {\n            self.events[event] = [];\n        }\n        \n        // We know we've got an array for this event, so push our callback in there with no fuss\n        return self.events[event].push(callback);\n    }\n\n    /**\n     * If the passed event has callbacks attached to it, loop through each one\n     * and call it\n     *\n     * @param {string} event\n     * @param {object} [data={}]\n     * @returns {array} The callbacks for this event, or an empty array if no event exits\n     * @memberof PubSub\n     */\n    publish(event, data = {}) {\n        let self = this;\n        \n        // There's no event to publish to, so bail out\n        if(!self.events.hasOwnProperty(event)) {\n            return [];\n        }\n        \n        // Get each subscription and call its callback with the passed data\n        return self.events[event].map(callback => callback(data));\n    }\n}","import PubSub from '../lib/pubsub.js';\n\nexport default class Store {\n    constructor(params) {\n        let self = this;\n\n        // Add some default objects to hold our actions, mutations and state\n        self.actions = {};\n        self.mutations = {};\n        self.state = {};\n\n        // A status enum to set during actions and mutations\n        self.status = 'resting';\n\n        // Attach our PubSub module as an `events` element\n        self.events = new PubSub();\n\n        // Look in the passed params object for actions and mutations \n        // that might have been passed in\n        if(params.hasOwnProperty('actions')) {\n            self.actions = params.actions;\n        }\n        \n        if(params.hasOwnProperty('mutations')) {\n            self.mutations = params.mutations;\n        }\n\n        // Set our state to be a Proxy. We are setting the default state by \n        // checking the params and defaulting to an empty object if no default \n        // state is passed in\n        self.state = new Proxy((params.state || {}), {\n            set: function(state, key, value) {\n                \n                // Set the value as we would normally\n                state[key] = value;\n                \n                // Trace out to the console. This will be grouped by the related action\n                console.log(`stateChange: ${key}: ${value}`);\n                \n                // Publish the change event for the components that are listening\n                self.events.publish('stateChange', self.state);\n                \n                // Give the user a little telling off if they set a value directly\n                if(self.status !== 'mutation') {\n                    console.warn(`You should use a mutation to set ${key}`);\n                }\n                \n                // Reset the status ready for the next operation\n                self.status = 'resting';\n                \n                return true;\n            }\n        });\n    }\n\n    /**\n     * A dispatcher for actions that looks in the actions \n     * collection and runs the action if it can find it\n     *\n     * @param {string} actionKey\n     * @param {mixed} payload\n     * @returns {boolean}\n     * @memberof Store\n     */\n    dispatch(actionKey, payload) {\n  \n        let self = this;\n        \n        // Run a quick check to see if the action actually exists\n        // before we try to run it\n        if(typeof self.actions[actionKey] !== 'function') {\n          console.error(`Action \"${actionKey} doesn't exist.`);\n          return false;\n        }\n        \n        // Create a console group which will contain the logs from our Proxy etc\n        console.groupCollapsed(`ACTION: ${actionKey}`);\n        \n        // Let anything that's watching the status know that we're dispatching an action\n        self.status = 'action';\n        \n        // Actually call the action and pass it the Store context and whatever payload was passed\n        self.actions[actionKey](self, payload);\n        \n        // Close our console group to keep things nice and neat\n        console.groupEnd();\n\n        return true;\n    }\n\n    /**\n     * Look for a mutation and modify the state object \n     * if that mutation exists by calling it\n     *\n     * @param {string} mutationKey\n     * @param {mixed} payload\n     * @returns {boolean}\n     * @memberof Store\n     */\n    commit(mutationKey, payload) {\n        let self = this;\n        \n        // Run a quick check to see if this mutation actually exists\n        // before trying to run it\n        if(typeof self.mutations[mutationKey] !== 'function') {\n            console.log(`Mutation \"${mutationKey}\" doesn't exist`);\n            return false;\n        }\n        \n        // Let anything that's watching the status know that we're mutating state\n        self.status = 'mutation';\n        \n        // Get a new version of the state by running the mutation and storing the result of it\n        let newState = self.mutations[mutationKey](self.state, payload);\n        \n        // Merge the old and new together to create a new state and set it\n        self.state = Object.assign(self.state, newState);\n\n        return true;\n    }\n}\n","import actions from './actions.js';\nimport mutations from './mutations.js';\nimport state from './state.js';\nimport Store from './store.js';\n\nexport default new Store({\n    actions,\n    mutations,\n    state\n});\n","export default {\n  adjL: {\n\tnodes: {\n\t  triggerOne: {\n\t\tid: 'triggerOne',\n\t\ttype: 'trigger',\n\t\ttext: 'Patient with no visit in last 12 months & no visit scheduled in next 2 months',\n\t\toutdegree: 1,\n\t\tindegree: 0,\n\t\tcoonectedNodes: [\n\t\t  'actionOne', \n\t\t]\n\t  },\n\t  actionOne: {\n\t\tid: 'actionOne',\n\t\ttype: 'action',\n\t\ttext: 'Call Patient',\n\t\toutdegree: 1,\n\t\tindegree: 1,\n\t\tcoonectedNodes: [\n\t\t  'ifThenOne', \n\t\t]\n\t  },\n\t  ifThenOne: {\n\t\tid: 'ifThenOne',\n\t\ttype: 'ifThen',\n\t\toutdegree: 2,\n\t\tindegree: 1,\n\t\tcoonectedNodes: [\n\t\t  'filterOne', \n\t\t  'actionRight',\n\t\t]\n\t  },\n\t  filterOne: {\n\t\tid: 'filterOne',\n\t\ttype: 'filter',\n\t\ttext: 'No. of reattemps <= 3',\n\t\toutdegree: 1,\n\t\tindegree: 1,\n\t\tcoonectedNodes: [\n\t\t  'actionOne', \n\t\t  'actionLeft',\n\t\t]\n\t  },\n\t  actionLeft: {\n\t\tid: 'actionLeft',\n\t\ttype: 'action',\n\t\ttext: 'Send Voicemail',\n\t\toutdegree: 0,\n\t\tindegree: 1,\n\t\tcoonectedNodes: []\n\t  },\n\t  actionRight: {\n\t\tid: 'actionRight',\n\t\ttype: 'action',\n\t\ttext: 'Play voice message & record the response',\n\t\toutdegree: 0,\n\t\tindegree: 1,\n\t\tcoonectedNodes: []\n\t  }\n\t}\n  },\n  items: [\n\t'I made this',\n\t'Another thing'\n  ]\n};\n","// We're importing the store Class here so we can test against it in the constructor\nimport Store from '../store/store.js';\n\nexport default class Component {\n    constructor(props = {}) {\n        let self = this;\n\n        // We're setting a render function as the one set by whatever inherits this base\n        // class or setting it to an empty by default. This is so nothing breaks if someone\n        // forgets to set it.\n        this.render = this.render || function() {};\n        \n        // If there's a store passed in, subscribe to the state change\n        if(props.store instanceof Store) {\n            props.store.events.subscribe('stateChange', () => self.render());\n        }\n        \n        // Store the HTML element to attach the render to if set\n        if(props.hasOwnProperty('element')) {\n            this.element = props.element;\n        }\n    }\n}\n","import store from './store/index.js'; \n\n// Load up components\nimport Count from './components/count.js';\nimport List from './components/list.js';\nimport Status from './components/status.js';\n\n// Load up some DOM elements\nconst formElement = document.querySelector('.js-form');\nconst inputElement = document.querySelector('#new-item-field');\n\nconst btnElement = document.querySelector('#btn');\nbtn.addEventListener('click', function (e) {\n  console.log(\"Button Clicked\");\n})\n\n// Add a submit event listener to the form and prevent it from posting back\nformElement.addEventListener('submit', evt => {\n    evt.preventDefault();\n    \n    // Grab the text value of the textbox and trim any whitespace off it\n    let value = inputElement.value.trim();\n    \n    // If there's some content, trigger the action and clear the field, ready for the next item\n    if(value.length) {\n        store.dispatch('addItem', value);\n        inputElement.value = '';\n        inputElement.focus();\n    }\n});\n\n// Instantiate components\nconst countInstance = new Count();\nconst listInstance = new List();\nconst statusInstance = new Status();\n\n// Initial renders\ncountInstance.render();\nlistInstance.render();\nstatusInstance.render();\n","import Component from '../lib/component.js';\nimport store from '../store/index.js';\n\nexport default class Count extends Component {\n    constructor() {\n        super({\n            store,\n            element: document.querySelector('.js-count')\n        });\n    }\n    \n    /**\n     * React to state changes and render the component's HTML\n     *\n     * @returns {void}\n     */\n    render() {\n        let suffix = store.state.items.length !== 1 ? 's' : '';\n        let emoji = store.state.items.length > 0 ? '🙌' : '😢';\n\n        this.element.innerHTML = `\n            <small>You've done</small>\n            <span>${store.state.items.length}</span>\n            <small>thing${suffix} today ${emoji}</small>\n        `;\n    }\n}\n","import Component from '../lib/component.js';\nimport store from '../store/index.js';\n\nexport default class List extends Component {\n    \n    // Pass our store instance and the HTML element up to the parent Component\n    constructor() {\n        super({\n            store,\n            element: document.querySelector('.js-items')\n        });\n    }\n\n    /**\n     * React to state changes and render the component's HTML\n     *\n     * @returns {void}\n     */\n    render() {\n        let self = this;\n\n        // If there are no items to show, render a little status instead\n        if(store.state.items.length === 0) {\n            self.element.innerHTML = `<p class=\"no-items\">You've done nothing yet 😢</p>`;\n            return;\n        }\n        \n        // Loop the items and generate a list of elements\n        self.element.innerHTML = `\n            <div class=\"app__items\">\n                ${store.state.items.map(item => {\n                    return `\n\t\t\t\t\t\t<div class=\"node-card\">\n\n\t\t\t\t\t\t</div>\n                    `\n                }).join('')}\n            </div>\n        `;\n\n        // Find all the buttons in the list and when they are clicked, we dispatch a \n        // `clearItem` action which we pass the current item's index to\n        self.element.querySelectorAll('button').forEach((button, index) => {\n            button.addEventListener('click', () => {\n                store.dispatch('clearItem', { index });\n            });\n        });\n    }\n};\n","import Component from '../lib/component.js';\nimport store from '../store/index.js';\n\nexport default class Status extends Component {\n    constructor() {\n        super({\n            store,\n            element: document.querySelector('.js-status')\n        });\n    }\n    \n    /**\n     * React to state changes and render the component's HTML\n     *\n     * @returns {void}\n     */\n    render() {\n        let self = this;\n        let suffix = store.state.items.length !== 1 ? 's' : '';\n        \n        self.element.innerHTML = `${store.state.items.length} item${suffix}`;\n    }\n}\n"],"sourceRoot":""}